---
alwaysApply: true
---

# Estamos en un juego de roblox, sigue las instrucciones a continuacion para poder desarrollar este proyecto, agregalo correctamente en el replicatedStorage en el serverScriptService o starterplayer segun corresponda, si hay alguna parte que deberia tener un script (el codigo que me proporcionas), referencialo como si ya existiera en el workspace y luego me encargo de crearlo


### **Concepto General:**

Un juego de parkour futurista donde los jugadores compiten para alcanzar la cima de estructuras verticales mientras realizan movimientos dinámicos y fluidos. El juego incluye desafíos, rutas secretas, y un sistema de progresión que incentiva la exploración y el regreso constante.

---

### **Mecánicas Principales:**

1. **Movimientos Dinámicos:**
    - **Correr en Paredes:** Los jugadores pueden correr brevemente en paredes verticales si tienen suficiente velocidad.
    - **Saltos de Pared:** Los jugadores pueden rebotar entre paredes cercanas para alcanzar plataformas altas.
    - **Dash:** Un impulso rápido hacia adelante para sortear obstáculos.
    - **Deslizamiento:** Los jugadores pueden deslizarse bajo objetos bajos mientras mantienen el momentum.
2. **Momentum:**
    - Implementa un sistema que mida la velocidad del jugador. Cuanto más rápido y fluido se mueva, más energía acumula para realizar movimientos especiales como el "Super Salto" o el "Dash Aéreo".
3. **Interacción con el Entorno:**
    - **Plataformas Dinámicas:** Algunas plataformas se mueven, desaparecen, o cambian de posición.
    - **Trampolines:** Superficies que impulsan a los jugadores hacia arriba o hacia adelante.
    - **Tirolinas:** Los jugadores pueden deslizarse entre puntos lejanos usando tirolinas futuristas.

---

### **Sistema de Progresión:**

1. **Niveles y Experiencia:**
    - Los jugadores ganan experiencia al completar niveles y desafíos.
    - La experiencia desbloquea habilidades avanzadas como saltos más largos, mayor duración de carrera en paredes, o deslizamientos más rápidos.
2. **Recolección de Objetos:**
    - Los jugadores pueden recoger "Fragmentos de Energía" dispersos por los niveles para desbloquear rutas secretas o mejoras.
    - Algunos objetos raros solo aparecen en áreas ocultas.
3. **Personalización:**
    - Desbloquea trajes futuristas, efectos visuales como estelas de luz, y estilos de movimiento únicos.
    - Los jugadores pueden personalizar su avatar para destacar en las competencias.

---

### **Diseño de Mapas:**

1. **Mapas Verticales:**
    - Cada nivel es una estructura masiva que los jugadores deben escalar, como torres futuristas, ciudades flotantes, o ruinas alienígenas.
    - Incluye múltiples rutas: caminos rápidos pero difíciles, y caminos más largos pero seguros.
2. **Zonas Secretas:**
    - Áreas ocultas que solo se desbloquean con habilidades avanzadas o al encontrar ciertos objetos.
    - Estas zonas ofrecen recompensas únicas como trajes exclusivos o fragmentos de energía raros.
3. **Eventos Dinámicos:**
    - Algunas partes del mapa cambian con el tiempo, como plataformas que desaparecen o trampolines que se activan solo durante ciertos momentos.

---

### **Motivación para Volver:**

1. **Tablas de Clasificación:**
    - Los jugadores compiten por el mejor tiempo en cada nivel.
    - Rankings globales y locales para fomentar la competencia.
2. **Eventos Temporales:**
    - Desafíos semanales como "Completa el nivel en menos de 2 minutos" con recompensas exclusivas.
    - Mapas especiales que solo están disponibles por tiempo limitado.
3. **Actualizaciones Frecuentes:**
    - Nuevos mapas, habilidades, y personalización cada mes.
    - Contenido adicional como modos cooperativos o niveles temáticos.

---

### **Innovaciones Específicas para Roblox Studio:**

1. **Scripts de Movimiento:**
    
    Usa **Lua** para crear un sistema de movimiento fluido que permita correr en paredes, deslizarse, y realizar dashes. Ejemplo:
    
    ```lua
    luaCopiar
    -- Wall Run Script
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    
    local function wallRun()if humanoid.MoveDirection.Magnitude > 0 then
            humanoid.WalkSpeed = 30 -- Aumenta la velocidad al correr en paredes
            wait(2) -- Duración del wall run
            humanoid.WalkSpeed = 16 -- Velocidad normal
        end
    end
    
    character.Touched:Connect(function(hit)if hit.Name == "Wall" then
            wallRun()
        end
    end)
    
    ```
    
2. **Sistema de Momentum:**
    
    Calcula la velocidad del jugador y usa esta información para activar habilidades especiales. Ejemplo:
    
    ```lua
    luaCopiar
    local momentum = 0
    local function updateMomentum(speed)
        momentum = momentum + speed * 0.1
        if momentum > 50 then
            -- Activa habilidad especial
            print("Super Salto Activado!")
        end
    end
    
    ```
    
3. **Mapas Verticales:**
    
    Usa herramientas de construcción en Roblox para diseñar estructuras verticales con plataformas flotantes, trampolines, y tirolinas.
    

---

### **Resumen:**

"SkyLeap" en Roblox Studio combina mecánicas fluidas, mapas verticales, y un sistema de progresión diseñado para mantener el interés de los jugadores.